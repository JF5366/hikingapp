{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LEARNER_XZHCZ102\\\\Desktop\\\\hikingapp\\\\client\\\\src\\\\pages\\\\map\\\\Map.js\";\nimport React, { useRef } from 'react';\n//import { Map, TileLayer } from 'react-leaflet';\n//import { MapContainer } from 'https://cdn.esm.sh/react-leaflet/MapContainer'\n//import { TileLayer } from 'https://cdn.esm.sh/react-leaflet/TileLayer'\n//import { useMap } from 'https://cdn.esm.sh/react-leaflet/hooks'\n//import { MapContainer, TileLayer, useMap } from 'react-leaflet'\n//import 'leaflet/dist/leaflet.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapChart = () => {\n  return /*#__PURE__*/_jsxDEV(MapContainer, {\n    center: [51.505, -0.09],\n    zoom: 13,\n    scrollWheelZoom: false,\n    children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n      attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\",\n      url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Marker, {\n      position: [51.505, -0.09],\n      children: /*#__PURE__*/_jsxDEV(Popup, {\n        children: [\"A pretty CSS3 popup. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 34\n        }, this), \" Easily customizable.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_c = MapChart;\nexport default mapChar;\n\n//.....................................................\n\n// const MapChart = () => {\n//     state = {\n//         center: [51.505, -0.091],\n//         zoom: 13,\n//       };\n//         return (\n//           <div>\n//             <Map center={this.state.center} zoom={this.state.zoom}>\n//               <TileLayer\n//                 attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n//                 url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n//               />\n//               <Marker position={this.state.center}>\n//                 <Popup>\n//                   A pretty CSS3 popup. <br /> Easily customizable.\n//                 </Popup>\n//               </Marker>\n//             </Map>\n//           </div>\n//         );\n//       }\n\n// export default MapChart;\n//.................................................\n// import React from \"react\";\n// import { geoCentroid } from \"d3-geo\";\n// import {\n//   ComposableMap,\n//   Geographies,\n//   Geography,\n//   Marker,\n//   Annotation\n// } from \"react-simple-maps\";\n\n// import allStates from \"./data/allstates.json\";\n\n// const geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\n// const offsets = {\n//   VT: [50, -8],\n//   NH: [34, 2],\n//   MA: [30, -1],\n//   RI: [28, 2],\n//   CT: [35, 10],\n//   NJ: [34, 1],\n//   DE: [33, 0],\n//   MD: [47, 10],\n//   DC: [49, 21]\n// };\n\n// const MapChart = () => {\n//   return (\n//     <ComposableMap projection=\"geoAlbersUsa\">\n//       <Geographies geography={geoUrl}>\n//         {({ geographies }) => (\n//           <>\n//             {geographies.map(geo => (\n//               <Geography\n//                 key={geo.rsmKey}\n//                 stroke=\"#FFF\"\n//                 geography={geo}\n//                 fill=\"#DDD\"\n//               />\n//             ))}\n//             {geographies.map(geo => {\n//               const centroid = geoCentroid(geo);\n//               const cur = allStates.find(s => s.val === geo.id);\n//               return (\n//                 <g key={geo.rsmKey + \"-name\"}>\n//                   {cur &&\n//                     centroid[0] > -160 &&\n//                     centroid[0] < -67 &&\n//                     (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n//                       <Marker coordinates={centroid}>\n//                         <text y=\"2\" fontSize={14} textAnchor=\"middle\">\n//                           {cur.id}\n//                         </text>\n//                       </Marker>\n//                     ) : (\n//                       <Annotation\n//                         subject={centroid}\n//                         dx={offsets[cur.id][0]}\n//                         dy={offsets[cur.id][1]}\n//                       >\n//                         <text x={4} fontSize={14} alignmentBaseline=\"middle\">\n//                           {cur.id}\n//                         </text>\n//                       </Annotation>\n//                     ))}\n//                 </g>\n//               );\n//             })}\n//           </>\n//         )}\n//       </Geographies>\n//     </ComposableMap>\n//   );\n// };\n\n// export default MapChart;\nvar _c;\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"names":["React","useRef","jsxDEV","_jsxDEV","MapChart","MapContainer","center","zoom","scrollWheelZoom","children","TileLayer","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","Marker","position","Popup","_c","mapChar","$RefreshReg$"],"sources":["C:/Users/LEARNER_XZHCZ102/Desktop/hikingapp/client/src/pages/map/Map.js"],"sourcesContent":["import React, { useRef } from 'react';\r\n//import { Map, TileLayer } from 'react-leaflet';\r\n//import { MapContainer } from 'https://cdn.esm.sh/react-leaflet/MapContainer'\r\n//import { TileLayer } from 'https://cdn.esm.sh/react-leaflet/TileLayer'\r\n//import { useMap } from 'https://cdn.esm.sh/react-leaflet/hooks'\r\n//import { MapContainer, TileLayer, useMap } from 'react-leaflet'\r\n//import 'leaflet/dist/leaflet.css';\r\n\r\n\r\n\r\n\r\nconst MapChart = () => {\r\n    return (\r\n        <MapContainer center={[51.505, -0.09]} zoom={13} scrollWheelZoom={false}>\r\n        <TileLayer\r\n          attribution='&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        <Marker position={[51.505, -0.09]}>\r\n          <Popup>\r\n            A pretty CSS3 popup. <br /> Easily customizable.\r\n          </Popup>\r\n        </Marker>\r\n      </MapContainer>\r\n    \r\n\r\n    )\r\n}\r\nexport default mapChar\r\n\r\n\r\n//.....................................................\r\n\r\n// const MapChart = () => {\r\n//     state = {\r\n//         center: [51.505, -0.091],\r\n//         zoom: 13,\r\n//       };\r\n//         return (\r\n//           <div>\r\n//             <Map center={this.state.center} zoom={this.state.zoom}>\r\n//               <TileLayer\r\n//                 attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n//                 url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n//               />\r\n//               <Marker position={this.state.center}>\r\n//                 <Popup>\r\n//                   A pretty CSS3 popup. <br /> Easily customizable.\r\n//                 </Popup>\r\n//               </Marker>\r\n//             </Map>\r\n//           </div>\r\n//         );\r\n//       }\r\n        \r\n// export default MapChart;\r\n//.................................................\r\n// import React from \"react\";\r\n// import { geoCentroid } from \"d3-geo\";\r\n// import {\r\n//   ComposableMap,\r\n//   Geographies,\r\n//   Geography,\r\n//   Marker,\r\n//   Annotation\r\n// } from \"react-simple-maps\";\r\n\r\n// import allStates from \"./data/allstates.json\";\r\n\r\n// const geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\r\n\r\n// const offsets = {\r\n//   VT: [50, -8],\r\n//   NH: [34, 2],\r\n//   MA: [30, -1],\r\n//   RI: [28, 2],\r\n//   CT: [35, 10],\r\n//   NJ: [34, 1],\r\n//   DE: [33, 0],\r\n//   MD: [47, 10],\r\n//   DC: [49, 21]\r\n// };\r\n\r\n// const MapChart = () => {\r\n//   return (\r\n//     <ComposableMap projection=\"geoAlbersUsa\">\r\n//       <Geographies geography={geoUrl}>\r\n//         {({ geographies }) => (\r\n//           <>\r\n//             {geographies.map(geo => (\r\n//               <Geography\r\n//                 key={geo.rsmKey}\r\n//                 stroke=\"#FFF\"\r\n//                 geography={geo}\r\n//                 fill=\"#DDD\"\r\n//               />\r\n//             ))}\r\n//             {geographies.map(geo => {\r\n//               const centroid = geoCentroid(geo);\r\n//               const cur = allStates.find(s => s.val === geo.id);\r\n//               return (\r\n//                 <g key={geo.rsmKey + \"-name\"}>\r\n//                   {cur &&\r\n//                     centroid[0] > -160 &&\r\n//                     centroid[0] < -67 &&\r\n//                     (Object.keys(offsets).indexOf(cur.id) === -1 ? (\r\n//                       <Marker coordinates={centroid}>\r\n//                         <text y=\"2\" fontSize={14} textAnchor=\"middle\">\r\n//                           {cur.id}\r\n//                         </text>\r\n//                       </Marker>\r\n//                     ) : (\r\n//                       <Annotation\r\n//                         subject={centroid}\r\n//                         dx={offsets[cur.id][0]}\r\n//                         dy={offsets[cur.id][1]}\r\n//                       >\r\n//                         <text x={4} fontSize={14} alignmentBaseline=\"middle\">\r\n//                           {cur.id}\r\n//                         </text>\r\n//                       </Annotation>\r\n//                     ))}\r\n//                 </g>\r\n//               );\r\n//             })}\r\n//           </>\r\n//         )}\r\n//       </Geographies>\r\n//     </ComposableMap>\r\n//   );\r\n// };\r\n\r\n// export default MapChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAKA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnB,oBACID,OAAA,CAACE,YAAY;IAACC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAE;IAACC,IAAI,EAAE,EAAG;IAACC,eAAe,EAAE,KAAM;IAAAC,QAAA,gBACxEN,OAAA,CAACO,SAAS;MACRC,WAAW,EAAC,yFAAyF;MACrGC,GAAG,EAAC;IAAoD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACxD,eACFb,OAAA,CAACc,MAAM;MAACC,QAAQ,EAAE,CAAC,MAAM,EAAE,CAAC,IAAI,CAAE;MAAAT,QAAA,eAChCN,OAAA,CAACgB,KAAK;QAAAV,QAAA,GAAC,uBACgB,eAAAN,OAAA;UAAAU,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAM,yBAC7B;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAQ;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACD;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACI;AAIrB,CAAC;AAAAI,EAAA,GAhBKhB,QAAQ;AAiBd,eAAeiB,OAAO;;AAGtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAD,EAAA;AAAAE,YAAA,CAAAF,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}