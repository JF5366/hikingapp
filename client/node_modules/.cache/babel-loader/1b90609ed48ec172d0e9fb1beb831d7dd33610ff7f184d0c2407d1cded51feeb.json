{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LEARNER_XZHCZ102\\\\Desktop\\\\hikingapp\\\\client\\\\src\\\\pages\\\\map\\\\Map.js\";\nimport React, { useRef } from 'react';\nimport { Map, TileLayer } from 'react-leaflet';\n//import 'leaflet/dist/leaflet.css';\n\n//var maps = L.map('maps').setView([51.505, -0.09], 13);\n\n//.....................................................\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapChart = () => {\n  state = {\n    center: [51.505, -0.091],\n    zoom: 13\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      center: this.state.center,\n      zoom: this.state.zoom,\n      children: [/*#__PURE__*/_jsxDEV(TileLayer, {\n        attribution: \"&copy <a href=\\\"http://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n        url: \"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        position: this.state.center,\n        children: /*#__PURE__*/_jsxDEV(Popup, {\n          children: [\"A pretty CSS3 popup. \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 40\n          }, this), \" Easily customizable.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 11\n  }, this);\n};\n_c = MapChart;\nexport default MapChart;\n//.................................................\n// import React from \"react\";\n// import { geoCentroid } from \"d3-geo\";\n// import {\n//   ComposableMap,\n//   Geographies,\n//   Geography,\n//   Marker,\n//   Annotation\n// } from \"react-simple-maps\";\n\n// import allStates from \"./data/allstates.json\";\n\n// const geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\n// const offsets = {\n//   VT: [50, -8],\n//   NH: [34, 2],\n//   MA: [30, -1],\n//   RI: [28, 2],\n//   CT: [35, 10],\n//   NJ: [34, 1],\n//   DE: [33, 0],\n//   MD: [47, 10],\n//   DC: [49, 21]\n// };\n\n// const MapChart = () => {\n//   return (\n//     <ComposableMap projection=\"geoAlbersUsa\">\n//       <Geographies geography={geoUrl}>\n//         {({ geographies }) => (\n//           <>\n//             {geographies.map(geo => (\n//               <Geography\n//                 key={geo.rsmKey}\n//                 stroke=\"#FFF\"\n//                 geography={geo}\n//                 fill=\"#DDD\"\n//               />\n//             ))}\n//             {geographies.map(geo => {\n//               const centroid = geoCentroid(geo);\n//               const cur = allStates.find(s => s.val === geo.id);\n//               return (\n//                 <g key={geo.rsmKey + \"-name\"}>\n//                   {cur &&\n//                     centroid[0] > -160 &&\n//                     centroid[0] < -67 &&\n//                     (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n//                       <Marker coordinates={centroid}>\n//                         <text y=\"2\" fontSize={14} textAnchor=\"middle\">\n//                           {cur.id}\n//                         </text>\n//                       </Marker>\n//                     ) : (\n//                       <Annotation\n//                         subject={centroid}\n//                         dx={offsets[cur.id][0]}\n//                         dy={offsets[cur.id][1]}\n//                       >\n//                         <text x={4} fontSize={14} alignmentBaseline=\"middle\">\n//                           {cur.id}\n//                         </text>\n//                       </Annotation>\n//                     ))}\n//                 </g>\n//               );\n//             })}\n//           </>\n//         )}\n//       </Geographies>\n//     </ComposableMap>\n//   );\n// };\n\n// export default MapChart;\nvar _c;\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"names":["React","useRef","Map","TileLayer","jsxDEV","_jsxDEV","MapChart","state","center","zoom","children","attribution","url","fileName","_jsxFileName","lineNumber","columnNumber","Marker","position","Popup","_c","$RefreshReg$"],"sources":["C:/Users/LEARNER_XZHCZ102/Desktop/hikingapp/client/src/pages/map/Map.js"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport { Map, TileLayer } from 'react-leaflet';\r\n//import 'leaflet/dist/leaflet.css';\r\n\r\n\r\n//var maps = L.map('maps').setView([51.505, -0.09], 13);\r\n\r\n\r\n\r\n\r\n//.....................................................\r\n\r\nconst MapChart = () => {\r\n    state = {\r\n        center: [51.505, -0.091],\r\n        zoom: 13,\r\n      };\r\n        return (\r\n          <div>\r\n            <Map center={this.state.center} zoom={this.state.zoom}>\r\n              <TileLayer\r\n                attribution='&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                url=\"https://{s}.tile.osm.org/{z}/{x}/{y}.png\"\r\n              />\r\n              <Marker position={this.state.center}>\r\n                <Popup>\r\n                  A pretty CSS3 popup. <br /> Easily customizable.\r\n                </Popup>\r\n              </Marker>\r\n            </Map>\r\n          </div>\r\n        );\r\n      }\r\n        \r\nexport default MapChart;\r\n//.................................................\r\n// import React from \"react\";\r\n// import { geoCentroid } from \"d3-geo\";\r\n// import {\r\n//   ComposableMap,\r\n//   Geographies,\r\n//   Geography,\r\n//   Marker,\r\n//   Annotation\r\n// } from \"react-simple-maps\";\r\n\r\n// import allStates from \"./data/allstates.json\";\r\n\r\n// const geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\r\n\r\n// const offsets = {\r\n//   VT: [50, -8],\r\n//   NH: [34, 2],\r\n//   MA: [30, -1],\r\n//   RI: [28, 2],\r\n//   CT: [35, 10],\r\n//   NJ: [34, 1],\r\n//   DE: [33, 0],\r\n//   MD: [47, 10],\r\n//   DC: [49, 21]\r\n// };\r\n\r\n// const MapChart = () => {\r\n//   return (\r\n//     <ComposableMap projection=\"geoAlbersUsa\">\r\n//       <Geographies geography={geoUrl}>\r\n//         {({ geographies }) => (\r\n//           <>\r\n//             {geographies.map(geo => (\r\n//               <Geography\r\n//                 key={geo.rsmKey}\r\n//                 stroke=\"#FFF\"\r\n//                 geography={geo}\r\n//                 fill=\"#DDD\"\r\n//               />\r\n//             ))}\r\n//             {geographies.map(geo => {\r\n//               const centroid = geoCentroid(geo);\r\n//               const cur = allStates.find(s => s.val === geo.id);\r\n//               return (\r\n//                 <g key={geo.rsmKey + \"-name\"}>\r\n//                   {cur &&\r\n//                     centroid[0] > -160 &&\r\n//                     centroid[0] < -67 &&\r\n//                     (Object.keys(offsets).indexOf(cur.id) === -1 ? (\r\n//                       <Marker coordinates={centroid}>\r\n//                         <text y=\"2\" fontSize={14} textAnchor=\"middle\">\r\n//                           {cur.id}\r\n//                         </text>\r\n//                       </Marker>\r\n//                     ) : (\r\n//                       <Annotation\r\n//                         subject={centroid}\r\n//                         dx={offsets[cur.id][0]}\r\n//                         dy={offsets[cur.id][1]}\r\n//                       >\r\n//                         <text x={4} fontSize={14} alignmentBaseline=\"middle\">\r\n//                           {cur.id}\r\n//                         </text>\r\n//                       </Annotation>\r\n//                     ))}\r\n//                 </g>\r\n//               );\r\n//             })}\r\n//           </>\r\n//         )}\r\n//       </Geographies>\r\n//     </ComposableMap>\r\n//   );\r\n// };\r\n\r\n// export default MapChart;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,GAAG,EAAEC,SAAS,QAAQ,eAAe;AAC9C;;AAGA;;AAKA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACnBC,KAAK,GAAG;IACJC,MAAM,EAAE,CAAC,MAAM,EAAE,CAAC,KAAK,CAAC;IACxBC,IAAI,EAAE;EACR,CAAC;EACC,oBACEJ,OAAA;IAAAK,QAAA,eACEL,OAAA,CAACH,GAAG;MAACM,MAAM,EAAE,IAAI,CAACD,KAAK,CAACC,MAAO;MAACC,IAAI,EAAE,IAAI,CAACF,KAAK,CAACE,IAAK;MAAAC,QAAA,gBACpDL,OAAA,CAACF,SAAS;QACRQ,WAAW,EAAC,2EAA6E;QACzFC,GAAG,EAAC;MAA0C;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAC9C,eACFX,OAAA,CAACY,MAAM;QAACC,QAAQ,EAAE,IAAI,CAACX,KAAK,CAACC,MAAO;QAAAE,QAAA,eAClCL,OAAA,CAACc,KAAK;UAAAT,QAAA,GAAC,uBACgB,eAAAL,OAAA;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,QAAM,yBAC7B;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA;MAAQ;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACD;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACF;AAEV,CAAC;AAAAI,EAAA,GApBDd,QAAQ;AAsBd,eAAeA,QAAQ;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}