{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LEARNER_XZHCZ102\\\\Desktop\\\\hikingapp\\\\client\\\\src\\\\pages\\\\map\\\\Map.js\";\nimport React from \"react\";\nimport { geoCentroid } from \"d3-geo\";\nimport { ComposableMap, Geographies, Geography, Marker, Annotation } from \"react-simple-maps\";\nimport allStates from \"./data/allstates.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\nconst offsets = {\n  VT: [50, -8],\n  NH: [34, 2],\n  MA: [30, -1],\n  RI: [28, 2],\n  CT: [35, 10],\n  NJ: [34, 1],\n  DE: [33, 0],\n  MD: [47, 10],\n  DC: [49, 21]\n};\nconst MapChart = () => {\n  return /*#__PURE__*/_jsxDEV(ComposableMap, {\n    projection: \"geoAlbersUsa\",\n    children: /*#__PURE__*/_jsxDEV(Geographies, {\n      geography: geoUrl,\n      children: _ref => {\n        let {\n          geographies\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [geographies.map(geo => /*#__PURE__*/_jsxDEV(Geography, {\n            stroke: \"#FFF\",\n            geography: geo,\n            fill: \"#DDD\"\n          }, geo.rsmKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, this)), geographies.map(geo => {\n            const centroid = geoCentroid(geo);\n            const cur = allStates.find(s => s.val === geo.id);\n            return /*#__PURE__*/_jsxDEV(\"g\", {\n              children: cur && centroid[0] > -160 && centroid[0] < -67 && (Object.keys(offsets).indexOf(cur.id) === -1 ? /*#__PURE__*/_jsxDEV(Marker, {\n                coordinates: centroid,\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  y: \"2\",\n                  fontSize: 14,\n                  textAnchor: \"middle\",\n                  children: cur.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 23\n              }, this) : /*#__PURE__*/_jsxDEV(Annotation, {\n                subject: centroid,\n                dx: offsets[cur.id][0],\n                dy: offsets[cur.id][1],\n                children: /*#__PURE__*/_jsxDEV(\"text\", {\n                  x: 4,\n                  fontSize: 14,\n                  alignmentBaseline: \"middle\",\n                  children: cur.id\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 61,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 23\n              }, this))\n            }, geo.rsmKey + \"-name\", false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 17\n            }, this);\n          })]\n        }, void 0, true);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = MapChart;\nexport default MapChart;\nvar _c;\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"names":["React","geoCentroid","ComposableMap","Geographies","Geography","Marker","Annotation","allStates","jsxDEV","_jsxDEV","Fragment","_Fragment","geoUrl","offsets","VT","NH","MA","RI","CT","NJ","DE","MD","DC","MapChart","projection","children","geography","_ref","geographies","map","geo","stroke","fill","rsmKey","fileName","_jsxFileName","lineNumber","columnNumber","centroid","cur","find","s","val","id","Object","keys","indexOf","coordinates","y","fontSize","textAnchor","subject","dx","dy","x","alignmentBaseline","_c","$RefreshReg$"],"sources":["C:/Users/LEARNER_XZHCZ102/Desktop/hikingapp/client/src/pages/map/Map.js"],"sourcesContent":["import React from \"react\";\r\nimport { geoCentroid } from \"d3-geo\";\r\nimport {\r\n  ComposableMap,\r\n  Geographies,\r\n  Geography,\r\n  Marker,\r\n  Annotation\r\n} from \"react-simple-maps\";\r\n\r\nimport allStates from \"./data/allstates.json\";\r\n\r\nconst geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\r\n\r\nconst offsets = {\r\n  VT: [50, -8],\r\n  NH: [34, 2],\r\n  MA: [30, -1],\r\n  RI: [28, 2],\r\n  CT: [35, 10],\r\n  NJ: [34, 1],\r\n  DE: [33, 0],\r\n  MD: [47, 10],\r\n  DC: [49, 21]\r\n};\r\n\r\nconst MapChart = () => {\r\n  return (\r\n    <ComposableMap projection=\"geoAlbersUsa\">\r\n      <Geographies geography={geoUrl}>\r\n        {({ geographies }) => (\r\n          <>\r\n            {geographies.map(geo => (\r\n              <Geography\r\n                key={geo.rsmKey}\r\n                stroke=\"#FFF\"\r\n                geography={geo}\r\n                fill=\"#DDD\"\r\n              />\r\n            ))}\r\n            {geographies.map(geo => {\r\n              const centroid = geoCentroid(geo);\r\n              const cur = allStates.find(s => s.val === geo.id);\r\n              return (\r\n                <g key={geo.rsmKey + \"-name\"}>\r\n                  {cur &&\r\n                    centroid[0] > -160 &&\r\n                    centroid[0] < -67 &&\r\n                    (Object.keys(offsets).indexOf(cur.id) === -1 ? (\r\n                      <Marker coordinates={centroid}>\r\n                        <text y=\"2\" fontSize={14} textAnchor=\"middle\">\r\n                          {cur.id}\r\n                        </text>\r\n                      </Marker>\r\n                    ) : (\r\n                      <Annotation\r\n                        subject={centroid}\r\n                        dx={offsets[cur.id][0]}\r\n                        dy={offsets[cur.id][1]}\r\n                      >\r\n                        <text x={4} fontSize={14} alignmentBaseline=\"middle\">\r\n                          {cur.id}\r\n                        </text>\r\n                      </Annotation>\r\n                    ))}\r\n                </g>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </Geographies>\r\n    </ComposableMap>\r\n  );\r\n};\r\n\r\nexport default MapChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}