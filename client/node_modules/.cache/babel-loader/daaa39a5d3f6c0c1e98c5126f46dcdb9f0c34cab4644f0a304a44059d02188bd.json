{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LEARNER_XZHCZ102\\\\Desktop\\\\hikingapp\\\\client\\\\src\\\\pages\\\\map\\\\Map.js\",\n  _s = $RefreshSig$();\nimport React, { useRef } from 'react';\nimport { Map, TileLayer } from 'react-leaflet';\nimport 'leaflet/dist/leaflet.css';\n\n//var maps = L.map('maps').setView([51.505, -0.09], 13);\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MapChart = () => {\n  _s();\n  const mapRef = useRef();\n\n  /**\r\n   * handleOnSetView\r\n   */\n\n  function handleOnSetView() {\n    const {\n      current = {}\n    } = mapRef;\n    const {\n      leafletElement: map\n    } = current;\n    map.setView(disneyWorldLatLng, 14);\n  }\n\n  /**\r\n   * handleOnFlyTo\r\n   */\n\n  function handleOnFlyTo() {\n    const {\n      current = {}\n    } = mapRef;\n    const {\n      leafletElement: map\n    } = current;\n    map.flyTo(disneyLandLatLng, 14, {\n      duration: 2\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(Map, {\n      ref: mapRef,\n      center: defaultCenter,\n      zoom: defaultZoom,\n      children: /*#__PURE__*/_jsxDEV(TileLayer, {\n        url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n        attribution: \"\\xA9 <a href=\\\"https://www.openstreetmap.org/copyright\\\">OpenStreetMap</a> contributors\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 7\n  }, this);\n};\n_s(MapChart, \"eZwvXZNGrOinO8i65lLhOza0GRY=\");\n_c = MapChart;\nexport default MapChart;\n\n// import React from \"react\";\n// import { geoCentroid } from \"d3-geo\";\n// import {\n//   ComposableMap,\n//   Geographies,\n//   Geography,\n//   Marker,\n//   Annotation\n// } from \"react-simple-maps\";\n\n// import allStates from \"./data/allstates.json\";\n\n// const geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\n\n// const offsets = {\n//   VT: [50, -8],\n//   NH: [34, 2],\n//   MA: [30, -1],\n//   RI: [28, 2],\n//   CT: [35, 10],\n//   NJ: [34, 1],\n//   DE: [33, 0],\n//   MD: [47, 10],\n//   DC: [49, 21]\n// };\n\n// const MapChart = () => {\n//   return (\n//     <ComposableMap projection=\"geoAlbersUsa\">\n//       <Geographies geography={geoUrl}>\n//         {({ geographies }) => (\n//           <>\n//             {geographies.map(geo => (\n//               <Geography\n//                 key={geo.rsmKey}\n//                 stroke=\"#FFF\"\n//                 geography={geo}\n//                 fill=\"#DDD\"\n//               />\n//             ))}\n//             {geographies.map(geo => {\n//               const centroid = geoCentroid(geo);\n//               const cur = allStates.find(s => s.val === geo.id);\n//               return (\n//                 <g key={geo.rsmKey + \"-name\"}>\n//                   {cur &&\n//                     centroid[0] > -160 &&\n//                     centroid[0] < -67 &&\n//                     (Object.keys(offsets).indexOf(cur.id) === -1 ? (\n//                       <Marker coordinates={centroid}>\n//                         <text y=\"2\" fontSize={14} textAnchor=\"middle\">\n//                           {cur.id}\n//                         </text>\n//                       </Marker>\n//                     ) : (\n//                       <Annotation\n//                         subject={centroid}\n//                         dx={offsets[cur.id][0]}\n//                         dy={offsets[cur.id][1]}\n//                       >\n//                         <text x={4} fontSize={14} alignmentBaseline=\"middle\">\n//                           {cur.id}\n//                         </text>\n//                       </Annotation>\n//                     ))}\n//                 </g>\n//               );\n//             })}\n//           </>\n//         )}\n//       </Geographies>\n//     </ComposableMap>\n//   );\n// };\n\n// export default MapChart;\nvar _c;\n$RefreshReg$(_c, \"MapChart\");","map":{"version":3,"names":["React","useRef","Map","TileLayer","jsxDEV","_jsxDEV","MapChart","_s","mapRef","handleOnSetView","current","leafletElement","map","setView","disneyWorldLatLng","handleOnFlyTo","flyTo","disneyLandLatLng","duration","className","children","ref","center","defaultCenter","zoom","defaultZoom","url","attribution","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/LEARNER_XZHCZ102/Desktop/hikingapp/client/src/pages/map/Map.js"],"sourcesContent":["import React, { useRef } from 'react';\r\nimport { Map, TileLayer } from 'react-leaflet';\r\nimport 'leaflet/dist/leaflet.css';\r\n\r\n\r\n//var maps = L.map('maps').setView([51.505, -0.09], 13);\r\n\r\n\r\n\r\nconst MapChart = () => {\r\n    const mapRef = useRef();\r\n\r\n    /**\r\n     * handleOnSetView\r\n     */\r\n  \r\n    function handleOnSetView() {\r\n      const { current = {} } = mapRef;\r\n      const { leafletElement: map } = current;\r\n  \r\n      map.setView(disneyWorldLatLng, 14);\r\n    }\r\n  \r\n    /**\r\n     * handleOnFlyTo\r\n     */\r\n  \r\n    function handleOnFlyTo() {\r\n      const { current = {} } = mapRef;\r\n      const { leafletElement: map } = current;\r\n  \r\n      map.flyTo(disneyLandLatLng, 14, {\r\n        duration: 2\r\n      });\r\n    }\r\n  \r\n    return (\r\n      <div className=\"App\">\r\n        <Map ref={mapRef} center={defaultCenter} zoom={defaultZoom}>\r\n          <TileLayer url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\" attribution=\"&copy; <a href=&quot;https://www.openstreetmap.org/copyright&quot;>OpenStreetMap</a> contributors\" />\r\n        </Map>\r\n        </div>\r\n        );\r\n     };\r\n        \r\nexport default MapChart;\r\n\r\n\r\n// import React from \"react\";\r\n// import { geoCentroid } from \"d3-geo\";\r\n// import {\r\n//   ComposableMap,\r\n//   Geographies,\r\n//   Geography,\r\n//   Marker,\r\n//   Annotation\r\n// } from \"react-simple-maps\";\r\n\r\n// import allStates from \"./data/allstates.json\";\r\n\r\n// const geoUrl = \"https://cdn.jsdelivr.net/npm/us-atlas@3/states-10m.json\";\r\n\r\n// const offsets = {\r\n//   VT: [50, -8],\r\n//   NH: [34, 2],\r\n//   MA: [30, -1],\r\n//   RI: [28, 2],\r\n//   CT: [35, 10],\r\n//   NJ: [34, 1],\r\n//   DE: [33, 0],\r\n//   MD: [47, 10],\r\n//   DC: [49, 21]\r\n// };\r\n\r\n// const MapChart = () => {\r\n//   return (\r\n//     <ComposableMap projection=\"geoAlbersUsa\">\r\n//       <Geographies geography={geoUrl}>\r\n//         {({ geographies }) => (\r\n//           <>\r\n//             {geographies.map(geo => (\r\n//               <Geography\r\n//                 key={geo.rsmKey}\r\n//                 stroke=\"#FFF\"\r\n//                 geography={geo}\r\n//                 fill=\"#DDD\"\r\n//               />\r\n//             ))}\r\n//             {geographies.map(geo => {\r\n//               const centroid = geoCentroid(geo);\r\n//               const cur = allStates.find(s => s.val === geo.id);\r\n//               return (\r\n//                 <g key={geo.rsmKey + \"-name\"}>\r\n//                   {cur &&\r\n//                     centroid[0] > -160 &&\r\n//                     centroid[0] < -67 &&\r\n//                     (Object.keys(offsets).indexOf(cur.id) === -1 ? (\r\n//                       <Marker coordinates={centroid}>\r\n//                         <text y=\"2\" fontSize={14} textAnchor=\"middle\">\r\n//                           {cur.id}\r\n//                         </text>\r\n//                       </Marker>\r\n//                     ) : (\r\n//                       <Annotation\r\n//                         subject={centroid}\r\n//                         dx={offsets[cur.id][0]}\r\n//                         dy={offsets[cur.id][1]}\r\n//                       >\r\n//                         <text x={4} fontSize={14} alignmentBaseline=\"middle\">\r\n//                           {cur.id}\r\n//                         </text>\r\n//                       </Annotation>\r\n//                     ))}\r\n//                 </g>\r\n//               );\r\n//             })}\r\n//           </>\r\n//         )}\r\n//       </Geographies>\r\n//     </ComposableMap>\r\n//   );\r\n// };\r\n\r\n// export default MapChart;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,QAAQ,OAAO;AACrC,SAASC,GAAG,EAAEC,SAAS,QAAQ,eAAe;AAC9C,OAAO,0BAA0B;;AAGjC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAIA,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,MAAM,GAAGP,MAAM,EAAE;;EAEvB;AACJ;AACA;;EAEI,SAASQ,eAAeA,CAAA,EAAG;IACzB,MAAM;MAAEC,OAAO,GAAG,CAAC;IAAE,CAAC,GAAGF,MAAM;IAC/B,MAAM;MAAEG,cAAc,EAAEC;IAAI,CAAC,GAAGF,OAAO;IAEvCE,GAAG,CAACC,OAAO,CAACC,iBAAiB,EAAE,EAAE,CAAC;EACpC;;EAEA;AACJ;AACA;;EAEI,SAASC,aAAaA,CAAA,EAAG;IACvB,MAAM;MAAEL,OAAO,GAAG,CAAC;IAAE,CAAC,GAAGF,MAAM;IAC/B,MAAM;MAAEG,cAAc,EAAEC;IAAI,CAAC,GAAGF,OAAO;IAEvCE,GAAG,CAACI,KAAK,CAACC,gBAAgB,EAAE,EAAE,EAAE;MAC9BC,QAAQ,EAAE;IACZ,CAAC,CAAC;EACJ;EAEA,oBACEb,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBf,OAAA,CAACH,GAAG;MAACmB,GAAG,EAAEb,MAAO;MAACc,MAAM,EAAEC,aAAc;MAACC,IAAI,EAAEC,WAAY;MAAAL,QAAA,eACzDf,OAAA,CAACF,SAAS;QAACuB,GAAG,EAAC,oDAAoD;QAACC,WAAW,EAAC;MAAmG;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAClL;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACA;AAET,CAAC;AAACxB,EAAA,CAlCDD,QAAQ;AAAA0B,EAAA,GAAR1B,QAAQ;AAoCd,eAAeA,QAAQ;;AAGvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}